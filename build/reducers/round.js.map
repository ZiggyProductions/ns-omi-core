{"version":3,"sources":["../../src/reducers/round.js"],"names":["_","require","cardweights","round","state","action","type","isEmpty","cards","initDeck","first","current","extend","trumph","shiftTurn","n","clone","sub_action","player","nn","deal","count","prevalidate","playAny","test","deck","pc","trick","shuffle","_1","concat","slice","_2","_3","_4","extendOwn","difference","console","error","key","_cards","rc","sample","without","ret","fc","sc","findBySuite","length","_1v","winsTrick","tc","_2v","_3v","_4v","card","filter","c","getWeight","w","weights","each","p","max","getWinner","keys","winner","next_turn","tricks","score","history","push","finished","module","exports","undefined"],"mappings":"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","file":"round.js","sourcesContent":["/**\n * Created by GAZ on 7/7/17.\n */\n\"use strict\";\nconst _ = require('underscore');\n\nvar cardweights = {'7':1,'8':2,'9':3,'1':4,'J':5,'Q':6,'K':7,'A':8};\n\nvar round = function (state, action)  {\n    switch (action.type) {\n        case 'INIT_ROUND':\n            return (_.isEmpty(state) ? { cards: initDeck(action), first: action.first, current: action.first } : state );\n        case 'SET_TRUMPH':\n            return _.extend({trumph: action.trumph}, state);\n        case 'SHIFT_TURN':\n            return shiftTurn(state);\n        case 'PREVALIDATE':\n        case 'DEAL':\n        case 'PLAY_ANY':\n            action.trumph = state.trumph;\n            action.current = state.current;\n            var n = _.clone(state);\n            n.cards = cards(n.cards,action);\n            return n;\n        case 'PLAY-SHIFT-PREVALIDATE':\n            var n = _.clone(state);\n            var sub_action = {trumph:n.trumph,current:n.current,type:'PLAY_ANY',player:action.player}\n            n.cards = cards(n.cards,sub_action);\n            var nn = shiftTurn(n);\n            //console.log(nn.current,nn.cards);\n\n            sub_action = {trumph:nn.trumph,current:nn.current,type:'PREVALIDATE'}\n            nn.cards = cards(nn.cards,sub_action);\n            return nn;\n\n        default:\n            return state;\n    }\n}\n\nvar cards = function (state, action)  {\n    switch (action.type) {\n        case 'DEAL':\n            return deal(state,action.count);\n        case 'PREVALIDATE':\n            return prevalidate(state,action);\n        case 'PLAY_ANY':\n            return playAny(state,action);\n        default:\n            return state;\n    }\n}\n\nfunction initDeck(action){\n    \"use strict\";\n    if(action.test){\n       return {\n           deck: [],\n           pc: action.test,\n           trick: {}\n       };\n    }\n    else {\n        return {\n            deck: _.shuffle([\n                '♣7', '♣8', '♣9', '♣10', '♣J', '♣Q', '♣K', '♣A',\n                '♦7', '♦8', '♦9', '♦10', '♦J', '♦Q', '♦K', '♦A',\n                '♠7', '♠8', '♠9', '♠10', '♠J', '♠Q', '♠K', '♠A',\n                '♥7', '♥8', '♥9', '♥10', '♥J', '♥Q', '♥K', '♥A'\n            ]),\n            trick: {}\n        };\n    }\n\n}\n\nfunction deal(cards,n){\n    if(cards.pc){\n        var pc = {\n            _1:cards.pc._1.concat(cards.deck.slice(0,n)),\n            _2:cards.pc._2.concat(cards.deck.slice(n,2*n)),\n            _3:cards.pc._3.concat(cards.deck.slice(2*n,3*n)),\n            _4:cards.pc._4.concat(cards.deck.slice(3*n,4*n))\n        }\n    }else{\n        var pc = {\n             _1:cards.deck.slice(0,n),\n             _2:cards.deck.slice(n,2*n),\n             _3:cards.deck.slice(2*n,3*n),\n             _4:cards.deck.slice(3*n,4*n)\n        }\n    }\n\n    return _.extendOwn(cards,{\n        pc:pc,\n        deck:_.difference(cards.deck,pc._1,pc._2,pc._3,pc._4)\n    });\n}\n\nfunction playAny(cards,action){\n    // not his turn\n    if(action.current !== action.player) {\n        console.error('MISSTURN',action.current,action.player)\n        return cards;\n    }\n    var key = '_'+action.player;\n\n    // no valid cards available\n    if(_.isEmpty(cards.pc[key]) || _.isEmpty(cards.pc[key+'v'])){\n        console.error('EMPTY',action.player,cards.pc[key],cards.pc[key+'v'])\n        return cards;\n    }\n\n    var _cards = _.clone(cards);\n    // taking random card from valid cards array\n    var rc = _.sample(_cards.pc[key+'v'],1);\n    // pulling that card from player cards array\n    _cards.pc[key] = _.without(_cards.pc[key],rc[0]);\n    // putting that card to trick\n    _cards.trick[key] = rc[0];\n\n    return _cards;\n}\n\nfunction prevalidate(cards,action){\n    var trick = cards.trick;\n    var ret = {pc:{}};\n    switch(action.current){\n        case 1:\n            // getting first card played in the trick\n            var fc = trick._2 || trick._3 || trick._4;\n            // if undefined so there are no cards in trick and we can play any card, so adding all my cards to valid cards array\n            if(fc)\n            {\n                var sc = findBySuite(cards.pc._1,fc);\n                // if contains cards corresponding to given suite returning that list\n                if(sc.length > 0) {\n                    // can play any card\n                    ret.pc._1v = sc;\n                } else {\n                    // check if my friend is grabbing the trick\n                    if(trick._3 && winsTrick(trick,3, fc, action.trumph)) {\n                        // can play any card\n                        ret.pc._1v = cards.pc._1;\n                    } else {\n                        // looking for trumphs\n                        var tc = findBySuite(cards.pc._1, action.trumph);\n                        if(tc.length > 0) {\n                            //should play trumph\n                            ret.pc._1v = tc;\n                        } else {\n                            // can play any card\n                            ret.pc._1v = cards.pc._1;\n                        }\n                    }\n                }\n            } else {\n                // can play any card\n                ret.pc._1v = cards.pc._1;\n            }\n            break;\n        case 2:\n            // getting first card played in the trick\n            var fc = trick._3 || trick._4 || trick._1;\n            // if undefined so there are no cards in trick and we can play any card, so adding all my cards to valid cards array\n            if(fc)\n            {\n                var sc = findBySuite(cards.pc._2,fc);\n                // if contains cards corresponding to given suite returning that list\n                if(sc.length > 0) {\n                    // can play any card\n                    ret.pc._2v = sc;\n                } else {\n                    // check if my friend is grabbing the trick\n                    if(trick._4 && winsTrick(trick,4, fc, action.trumph)) {\n                        // can play any card\n                        ret.pc._2v = cards.pc._2;\n                    } else {\n                        // looking for trumphs\n                        var tc = findBySuite(cards.pc._2, action.trumph);\n                        if(tc.length > 0) {\n                            //should play trumph\n                            ret.pc._2v = tc;\n                        } else {\n                            // can play any card\n                            ret.pc._2v = cards.pc._2;\n                        }\n                    }\n                }\n            } else {\n                // can play any card\n                ret.pc._2v = cards.pc._2;\n            }\n            break;\n        case 3:\n            // getting first card played in the trick\n            var fc = trick._4 || trick._1 || trick._2;\n            // if undefined so there are no cards in trick and we can play any card, so adding all my cards to valid cards array\n            if(fc)\n            {\n                var sc = findBySuite(cards.pc._3,fc);\n                // if contains cards corresponding to given suite returning that list\n                if(sc.length > 0) {\n                    // can play any card\n                    ret.pc._3v = sc;\n                } else {\n                    // check if my friend is grabbing the trick\n                    if(trick._1 && winsTrick(trick,1, fc, action.trumph)) {\n                        // can play any card\n                        ret.pc._3v = cards.pc._3;\n                    } else {\n                        // looking for trumphs\n                        var tc = findBySuite(cards.pc._3, action.trumph);\n                        if(tc.length > 0) {\n                            //should play trumph\n                            ret.pc._3v = tc;\n                        } else {\n                            // can play any card\n                            ret.pc._3v = cards.pc._3;\n                        }\n                    }\n                }\n            } else {\n                // can play any card\n                ret.pc._3v = cards.pc._3;\n            }            break;\n        case 4:\n            // getting first card played in the trick\n            var fc = trick._1 || trick._2 || trick._3;\n            // if undefined so there are no cards in trick and we can play any card, so adding all my cards to valid cards array\n            if(fc)\n            {\n                var sc = findBySuite(cards.pc._4,fc);\n                // if contains cards corresponding to given suite returning that list\n                if(sc.length > 0) {\n                    // can play any card\n                    ret.pc._4v = sc;\n                } else {\n                    // check if my friend is grabbing the trick\n                    if(trick._2 && winsTrick(trick,2, fc, action.trumph)) {\n                        // can play any card\n                        ret.pc._4v = cards.pc._4;\n                    } else {\n                        // looking for trumphs\n                        var tc = findBySuite(cards.pc._4, action.trumph);\n                        if(tc.length > 0) {\n                            //should play trumph\n                            ret.pc._4v = tc;\n                        } else {\n                            // can play any card\n                            ret.pc._4v = cards.pc._4;\n                        }\n                    }\n                }\n            } else {\n                // can play any card\n                ret.pc._4v = cards.pc._4;\n            }            break;\n    }\n    //console.log(action.current,fc,sc,trick);\n    ret.pc._1 = cards.pc._1;\n    ret.pc._2 = cards.pc._2;\n    ret.pc._3 = cards.pc._3;\n    ret.pc._4 = cards.pc._4;\n\n    return _.extendOwn(cards,ret);\n}\n\nfunction findBySuite(cards,card){\n    return _.filter(cards,(c)=>{\n        return c[0] == card[0];\n    })\n}\n\nfunction winsTrick(cards,key,fc,trumph){\n    key = '_'+key;\n    function getWeight(c){\n        var w = 0;\n        if(c[0] == trumph[0])\n            w += 10;\n        w += cardweights[c[1]];\n        if(c[0] != trumph[0] && c[0] != fc[0])\n            w = 0;\n        return w;\n    }\n    var weights = {};\n    _.each(cards,(c,p)=>{\n        weights[p] = getWeight(c);\n    });\n    var max = _.max(weights);\n    return weights[key] == max;\n}\n\nfunction getWinner(trick,fc,trumph){\n    if(winsTrick(trick,1,fc,trumph))\n        return 1;\n    if(winsTrick(trick,2,fc,trumph))\n        return 2;\n    if(winsTrick(trick,3,fc,trumph))\n        return 3;\n    if(winsTrick(trick,4,fc,trumph))\n        return 4;\n}\n\nfunction shiftTurn(round) {\n     //check for trick finish\n     if(_.keys(round.cards.trick).length == 4) {\n         // calculate winner and turn the trick\n         // who was started the trick?\n         switch(round.current){\n             case 1:\n                var fc = round.cards.trick._2;\n                break;\n             case 2:\n                var fc = round.cards.trick._3;\n                break;\n             case 3:\n                var fc = round.cards.trick._4;\n                break;\n             case 4:\n                var fc = round.cards.trick._1;\n                break;\n         }\n\n         var winner = getWinner(round.cards.trick,fc,round.trumph);\n         var next_turn = winner;\n         var tricks = round.cards.tricks || {score:{1:0,2:0},history:[]};\n         tricks.score[winner%2 == 0 ? 2 : 1]++;\n         tricks.history.push({trick: round.cards.trick, winner:winner});\n\n         //check for round finish\n         var finished = (tricks.history.length == 8);\n         var _cards = _.extendOwn(round.cards,{tricks:tricks, trick:{}});\n         return _.extendOwn(round,{current:next_turn, cards:_cards, finished:finished });\n     } else {\n         // shift the turn\n         var next_turn = (round.current == 4 ? 1 : round.current + 1);\n         return _.extendOwn(round,{current:next_turn});\n     }\n\n}\n\nmodule.exports = function (state, action)  {\n    if(undefined === state)\n        return [];\n    switch (action.type) {\n        case 'ADD_ROUND':\n            return state.concat({});\n        // proxying actions to the last round\n        case 'INIT_ROUND':\n        case 'SET_TRUMPH':\n        case 'DEAL':\n        case 'PREVALIDATE':\n        case 'PLAY_ANY':\n        case 'SHIFT_TURN':\n        case 'PLAY-SHIFT-PREVALIDATE':\n            var n = _.clone(state);\n            n[n.length-1] = round(n[n.length-1],action)\n            return n;\n        default:\n            return state;\n    }\n}\n\n"]}